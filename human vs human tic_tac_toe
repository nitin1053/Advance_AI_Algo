def print_board(board):
   for row in board:
       print(" | ".join(row))
       print("-" * 9)


def check_winner(board, player):
   # Check rows, columns, and diagonals for a win
   for i in range(3):
       if all([cell == player for cell in board[i]]):  # Check rows
           return True
       if all([board[j][i] == player for j in range(3)]):  # Check columns
           return True
   if all([board[i][i] == player for i in range(3)]) or all([board[i][2-i] == player for i in range(3)]):
       return True
   return False


def is_draw(board):
   return all(cell != ' ' for row in board for cell in row)


def tic_tac_toe():
   board = [[' ' for _ in range(3)] for _ in range(3)]
   current_player = 'X'
  
   while True:
       print_board(board)
       row = int(input(f"Player {current_player}, enter row (0, 1, 2): "))
       col = int(input(f"Player {current_player}, enter column (0, 1, 2): "))
      
       if board[row][col] != ' ':
           print("Cell is already occupied! Try again.")
           continue
      
       board[row][col] = current_player
      
       if check_winner(board, current_player):
           print_board(board)
           print(f"Player {current_player} wins!")
           break
      
       if is_draw(board):
           print_board(board)
           print("It's a draw!")
           break
      
       current_player = 'O' if current_player == 'X' else 'X'


if __name__ == "__main__":
   tic_tac_toe()
